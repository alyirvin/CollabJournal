{"ast":null,"code":"var _jsxFileName = \"/Users/ivanlhz/Documents/GitHub/CollabJournal/Frontend/src/Components/Reset.jsx\",\n  _s = $RefreshSig$();\n// import React, {useState} from 'react';\n// import axios from 'axios';\n// import './reset.css';\n// import spirals from './images/spirals.png';\n\n// const Reset = () => {\n//     return(\n//       <div className=\"resetContainer\">\n//         <div className=\"containerSpiral\">\n//           <img src={spirals} alt=\"spirals\" id=\"spirals\"/>\n//         </div>\n//         <p className=\"title\">RESET PASSWORD</p>\n//         <div className=\"containerOne\">\n//           <label className=\"textTwo\">New Password</label>\n//           <input className=\"input\" />\n//           <p />\n//           <label className=\"textTwo\">Confirm New Password</label>\n//           <input className=\"input\" />\n//         </div>\n//         <p />\n//         <button className=\"button\">\n//           <a className=\"button-prop\" href=\"login.html\">\n//             <div id=\"button-text\">LOG IN</div>\n//           </a>\n//         </button>\n//       </div>\n//     )\n// }\n\n// export default Reset\n\n// src/Components/LoginSignup/Reset.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './reset.css';\nimport spirals from './../../images/spirals.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reset = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (newPassword !== confirmPassword) {\n      setMessage(\"Passwords do not match\");\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5001/ResetPassword', {\n        email,\n        newPassword\n      });\n      setMessage(response.data);\n      // Redirect to login page after successful password reset\n      window.location.href = '/Login';\n    } catch (error) {\n      setMessage(error.response.data);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"resetContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerSpiral\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: spirals,\n        alt: \"spirals\",\n        id: \"spirals\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title\",\n      children: \"RESET PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerOne\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"textTwo\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"textTwo\",\n          children: \"New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"textTwo\",\n          children: \"Confirm New Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"button-text\",\n          children: \"RESET PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(Reset, \"Oc6nLE4/N9ZsQFXCPzr40+SGQqg=\");\n_c = Reset;\nexport default Reset;\nvar _c;\n$RefreshReg$(_c, \"Reset\");","map":{"version":3,"names":["React","useState","axios","spirals","jsxDEV","_jsxDEV","Reset","_s","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","message","setMessage","handleSubmit","e","preventDefault","response","post","data","window","location","href","error","className","children","src","alt","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/Users/ivanlhz/Documents/GitHub/CollabJournal/Frontend/src/Components/Reset.jsx"],"sourcesContent":["// import React, {useState} from 'react';\n// import axios from 'axios';\n// import './reset.css';\n// import spirals from './images/spirals.png';\n\n// const Reset = () => {\n//     return(\n//       <div className=\"resetContainer\">\n//         <div className=\"containerSpiral\">\n//           <img src={spirals} alt=\"spirals\" id=\"spirals\"/>\n//         </div>\n//         <p className=\"title\">RESET PASSWORD</p>\n//         <div className=\"containerOne\">\n//           <label className=\"textTwo\">New Password</label>\n//           <input className=\"input\" />\n//           <p />\n//           <label className=\"textTwo\">Confirm New Password</label>\n//           <input className=\"input\" />\n//         </div>\n//         <p />\n//         <button className=\"button\">\n//           <a className=\"button-prop\" href=\"login.html\">\n//             <div id=\"button-text\">LOG IN</div>\n//           </a>\n//         </button>\n//       </div>\n//     )\n// }\n\n// export default Reset\n\n// src/Components/LoginSignup/Reset.jsx\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './reset.css';\nimport spirals from './../../images/spirals.png';\n\nconst Reset = () => {\n    const [email, setEmail] = useState('');\n    const [newPassword, setNewPassword] = useState('');\n    const [confirmPassword, setConfirmPassword] = useState('');\n    const [message, setMessage] = useState('');\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (newPassword !== confirmPassword) {\n            setMessage(\"Passwords do not match\");\n            return;\n        }\n        try {\n            const response = await axios.post('http://localhost:5001/ResetPassword', { email, newPassword });\n            setMessage(response.data);\n            // Redirect to login page after successful password reset\n            window.location.href = '/Login';\n        } catch (error) {\n            setMessage(error.response.data);\n        }\n    };\n\n    return (\n        <div className=\"resetContainer\">\n            <div className=\"containerSpiral\">\n                <img src={spirals} alt=\"spirals\" id=\"spirals\" />\n            </div>\n            <p className=\"title\">RESET PASSWORD</p>\n            <form onSubmit={handleSubmit}>\n                <div className=\"containerOne\">\n                    <label className=\"textTwo\">Email</label>\n                    <input\n                        className=\"input\"\n                        type=\"email\"\n                        value={email}\n                        onChange={(e) => setEmail(e.target.value)}\n                        required\n                    />\n                    <label className=\"textTwo\">New Password</label>\n                    <input\n                        className=\"input\"\n                        type=\"password\"\n                        value={newPassword}\n                        onChange={(e) => setNewPassword(e.target.value)}\n                        required\n                    />\n                    <label className=\"textTwo\">Confirm New Password</label>\n                    <input\n                        className=\"input\"\n                        type=\"password\"\n                        value={confirmPassword}\n                        onChange={(e) => setConfirmPassword(e.target.value)}\n                        required\n                    />\n                </div>\n                <button className=\"button\" type=\"submit\">\n                    <div id=\"button-text\">RESET PASSWORD</div>\n                </button>\n                {message && <p>{message}</p>}\n            </form>\n        </div>\n    );\n};\n\nexport default Reset;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}